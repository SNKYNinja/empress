name: Deploy Bot to AWS

on:
    release:
        types: [published] # original trigger
    workflow_dispatch: # manual trigger for testing

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build project
              run: pnpm build

            - name: Create GitHub Deployment
              id: deployment
              uses: octokit/request-action@v2
              with:
                  route: POST /repos/${{ github.repository }}/deployments
                  ref: ${{ github.ref }}
                  environment: production
                  auto_merge: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Optional: Test AWS SSH connection without running commands
            - name: Test AWS SSH Connection
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USER }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      echo "SSH connection successful"
                      # Uncomment below after testing
                      cd ${{ secrets.EC2_PATH }}
                      git fetch --all
                      git reset --hard origin/v2
                      pnpm install --prod
                      pnpm restart

            - name: Mark Deployment Success
              if: success()
              uses: octokit/request-action@v2
              with:
                  route: POST /repos/${{ github.repository }}/deployments/${{ steps.deployment.outputs.id }}/statuses
                  state: success
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Mark Deployment Failure
              if: failure()
              uses: octokit/request-action@v2
              with:
                  route: POST /repos/${{ github.repository }}/deployments/${{ steps.deployment.outputs.id }}/statuses
                  state: failure
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
